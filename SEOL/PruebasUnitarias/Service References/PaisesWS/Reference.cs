//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PruebasUnitarias.PaisesWS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pais", Namespace="http://schemas.datacontract.org/2004/07/Servicios.Dominio")]
    [System.SerializableAttribute()]
    public partial class Pais : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cod_paisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nom_paisField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cod_pais {
            get {
                return this.cod_paisField;
            }
            set {
                if ((object.ReferenceEquals(this.cod_paisField, value) != true)) {
                    this.cod_paisField = value;
                    this.RaisePropertyChanged("cod_pais");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nom_pais {
            get {
                return this.nom_paisField;
            }
            set {
                if ((object.ReferenceEquals(this.nom_paisField, value) != true)) {
                    this.nom_paisField = value;
                    this.RaisePropertyChanged("nom_pais");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaisRepetido", Namespace="http://schemas.datacontract.org/2004/07/Servicios.Errores")]
    [System.SerializableAttribute()]
    public partial class PaisRepetido : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Codigo {
            get {
                return this.CodigoField;
            }
            set {
                if ((object.ReferenceEquals(this.CodigoField, value) != true)) {
                    this.CodigoField = value;
                    this.RaisePropertyChanged("Codigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripcion {
            get {
                return this.DescripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionField, value) != true)) {
                    this.DescripcionField = value;
                    this.RaisePropertyChanged("Descripcion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PaisesWS.IPaises")]
    public interface IPaises {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaises/CrearPais", ReplyAction="http://tempuri.org/IPaises/CrearPaisResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PruebasUnitarias.PaisesWS.PaisRepetido), Action="http://tempuri.org/IPaises/CrearPaisPaisRepetidoFault", Name="PaisRepetido", Namespace="http://schemas.datacontract.org/2004/07/Servicios.Errores")]
        PruebasUnitarias.PaisesWS.Pais CrearPais(PruebasUnitarias.PaisesWS.Pais paisACrear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaises/CrearPais", ReplyAction="http://tempuri.org/IPaises/CrearPaisResponse")]
        System.Threading.Tasks.Task<PruebasUnitarias.PaisesWS.Pais> CrearPaisAsync(PruebasUnitarias.PaisesWS.Pais paisACrear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaises/ObtenerPais", ReplyAction="http://tempuri.org/IPaises/ObtenerPaisResponse")]
        PruebasUnitarias.PaisesWS.Pais ObtenerPais(string codpai);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaises/ObtenerPais", ReplyAction="http://tempuri.org/IPaises/ObtenerPaisResponse")]
        System.Threading.Tasks.Task<PruebasUnitarias.PaisesWS.Pais> ObtenerPaisAsync(string codpai);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaises/ModificarPais", ReplyAction="http://tempuri.org/IPaises/ModificarPaisResponse")]
        PruebasUnitarias.PaisesWS.Pais ModificarPais(PruebasUnitarias.PaisesWS.Pais paisAModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaises/ModificarPais", ReplyAction="http://tempuri.org/IPaises/ModificarPaisResponse")]
        System.Threading.Tasks.Task<PruebasUnitarias.PaisesWS.Pais> ModificarPaisAsync(PruebasUnitarias.PaisesWS.Pais paisAModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaises/EliminarPais", ReplyAction="http://tempuri.org/IPaises/EliminarPaisResponse")]
        void EliminarPais(string codpai);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaises/EliminarPais", ReplyAction="http://tempuri.org/IPaises/EliminarPaisResponse")]
        System.Threading.Tasks.Task EliminarPaisAsync(string codpai);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaises/ListarPaises", ReplyAction="http://tempuri.org/IPaises/ListarPaisesResponse")]
        PruebasUnitarias.PaisesWS.Pais[] ListarPaises();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPaises/ListarPaises", ReplyAction="http://tempuri.org/IPaises/ListarPaisesResponse")]
        System.Threading.Tasks.Task<PruebasUnitarias.PaisesWS.Pais[]> ListarPaisesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPaisesChannel : PruebasUnitarias.PaisesWS.IPaises, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PaisesClient : System.ServiceModel.ClientBase<PruebasUnitarias.PaisesWS.IPaises>, PruebasUnitarias.PaisesWS.IPaises {
        
        public PaisesClient() {
        }
        
        public PaisesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PaisesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PaisesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PaisesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PruebasUnitarias.PaisesWS.Pais CrearPais(PruebasUnitarias.PaisesWS.Pais paisACrear) {
            return base.Channel.CrearPais(paisACrear);
        }
        
        public System.Threading.Tasks.Task<PruebasUnitarias.PaisesWS.Pais> CrearPaisAsync(PruebasUnitarias.PaisesWS.Pais paisACrear) {
            return base.Channel.CrearPaisAsync(paisACrear);
        }
        
        public PruebasUnitarias.PaisesWS.Pais ObtenerPais(string codpai) {
            return base.Channel.ObtenerPais(codpai);
        }
        
        public System.Threading.Tasks.Task<PruebasUnitarias.PaisesWS.Pais> ObtenerPaisAsync(string codpai) {
            return base.Channel.ObtenerPaisAsync(codpai);
        }
        
        public PruebasUnitarias.PaisesWS.Pais ModificarPais(PruebasUnitarias.PaisesWS.Pais paisAModificar) {
            return base.Channel.ModificarPais(paisAModificar);
        }
        
        public System.Threading.Tasks.Task<PruebasUnitarias.PaisesWS.Pais> ModificarPaisAsync(PruebasUnitarias.PaisesWS.Pais paisAModificar) {
            return base.Channel.ModificarPaisAsync(paisAModificar);
        }
        
        public void EliminarPais(string codpai) {
            base.Channel.EliminarPais(codpai);
        }
        
        public System.Threading.Tasks.Task EliminarPaisAsync(string codpai) {
            return base.Channel.EliminarPaisAsync(codpai);
        }
        
        public PruebasUnitarias.PaisesWS.Pais[] ListarPaises() {
            return base.Channel.ListarPaises();
        }
        
        public System.Threading.Tasks.Task<PruebasUnitarias.PaisesWS.Pais[]> ListarPaisesAsync() {
            return base.Channel.ListarPaisesAsync();
        }
    }
}
